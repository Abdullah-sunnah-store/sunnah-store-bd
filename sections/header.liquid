<style>
    .header__heading-link {
    padding: 0 0.75rem 0.75rem 0.75rem;
}
   .header__icons.header__icons--localization.header-localization svg {
    color: #303030 !important;
   }
   .header__inline-menu ul li span{
    color: #303030 !important;
  }
  .mega-menu__link.link {
    text-transform: capitalize;
}
  .header-wrapper.color-scheme-1.gradient.header-wrapper--border-bottom {
    background-color: #fff !important;
}
  .header {
  padding: 10px 1.5rem 6px 1.5rem !important;
}
  .header--middle-left .header__inline-menu {
    margin-left: 0;
  }
  summary.list-menu__item {
  padding-right: 2rem;
  padding-left: 2rem;
}
  .site-title{
  display: none;
}
  .header-wrapper--border-bottom {
  border-bottom: unset !important;
}

/* Country Dropdown Styles */
.country-dropdown {
  position: relative;
  display: flex;
  margin-right: 1rem;
}

.country-dropdown__trigger {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 12px;
  background: transparent;
  border: 1px solid #e0e0e0;
  border-radius: 6px;
  cursor: pointer;
  font-size: 14px;
  font-weight: 500;
  color: #303030;
  transition: all 0.2s ease;
  text-decoration: none;
}

.country-dropdown__trigger:hover {
  border-color: #303030;
}

.country-dropdown__flag {
  width: 20px;
  height: 15px;
  border-radius: 2px;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.country-dropdown__flag img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.country-dropdown__code {
  font-weight: 600;
  color: #303030;
}

.country-dropdown__arrow {
  width: 12px;
  height: 12px;
  transition: transform 0.2s ease;
}

.country-dropdown.active .country-dropdown__arrow {
  transform: rotate(180deg);
}

.country-dropdown__menu {
  position: absolute;
  top: 100%;
  left: 0;
  min-width: 200px;
  background: #fff;
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  opacity: 0;
  visibility: hidden;
  transform: translateY(-10px);
  transition: all 0.2s ease;
  z-index: 1000;
  max-height: 300px;
  overflow-y: auto;
}

.country-dropdown.active .country-dropdown__menu {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

.country-dropdown__option {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 12px 16px;
  color: #303030;
  text-decoration: none;
  transition: background 0.2s ease;
  border-bottom: 1px solid #f0f0f0;
}

.country-dropdown__option:last-child {
  border-bottom: none;
}

.country-dropdown__option:hover {
  background: #f8f8f8;
}

.country-dropdown__option.active {
  background: #f0f0f0;
  font-weight: 600;
}

.country-dropdown__option-flag {
  width: 24px;
  height: 18px;
  border-radius: 2px;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.country-dropdown__option-flag img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.country-dropdown__option-info {
  display: flex;
  flex-direction: column;
  gap: 2px;
}

.country-dropdown__option-name {
  font-size: 14px;
  font-weight: 500;
}

.country-dropdown__option-code {
  font-size: 12px;
  color: #666;
  font-weight: 400;
}

@media screen and (max-width: 991px){
  .header__heading-logo-wrapper{
    display: none;
  }
  .site-title{
      display: block;
      display: inline-flex;
      flex-flow: column;
      align-items: center;
      color: #000;
      text-decoration: none;
      line-height: unset;
      font-family: 'Garet', sans-serif !important;
      font-size: 13px;
      text-transform: lowercase;
      font-weight: 600;
    
}
  .header__heading {
    line-height: unset;
    display: flex;
  }
      .header__heading .site-title .logo-est {
        font-size: 9px;
        text-transform: lowercase;
    }
      .header__heading .site-title .logo-title {
        font-size: 13px;
        line-height: 2;
        text-transform: lowercase;
    }
  
  .country-dropdown {
    margin-right: 0.5rem;
  }
  
  .country-dropdown__trigger {
    padding: 6px 8px;
    font-size: 12px;
  }
  
  .country-dropdown__flag {
    width: 16px;
    height: 12px;
  }
  
  .country-dropdown__menu {
    min-width: 180px;
    right: 0;
    left: auto;
  }
  /* Hide country code text */
  .country-dropdown__code, .country-dropdown__arrow {
    display: none;
  }
 
  
  /* Remove padding and borders from container */
  .country-dropdown__trigger {
    padding: 0;
    border: none;
  }
}

 #shopify-section-{{section.id}} header.header.header--middle-left.header--mobile-center.page-width.header--has-menu.header--has-social.header--has-account{
        display: flex;
        justify-content: space-around;
  }
 #shopify-section-{{section.id}} .icon.icon-caret{
        display: none;
  }
 #shopify-section-{{section.id}} ul.mega-menu__list.page-width{
    display: flex;
    justify-content: space-evenly;
  }
 #shopify-section-{{section.id}} .header__inline-menu ul li {
    font-weight: unset;
  }
.header__menu-item:hover span{
text-underline-offset: 0.6rem
}
  details[open]:hover > .header__menu-item {
  text-decoration: none;
}

  </style>


<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">

{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

{%- if section.settings.menu_type_desktop == 'mega' -%}
  <link rel="stylesheet" href="{{ 'component-mega-menu.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}


<style>
  header-drawer {
    justify-self: start;
    margin-left: -1.2rem;
  }

  {%- if section.settings.sticky_header_type == 'reduce-logo-size' -%}
    .scrolled-past-header .header__heading-logo-wrapper {
      width: 75%;
    }
  {%- endif -%}

  {%- if section.settings.menu_type_desktop != "drawer" -%}
    @media screen and (min-width: 990px) {
      header-drawer {
        display: none;
      }
    }
  {%- endif -%}

  .menu-drawer-container {
    display: flex;
  }

  .list-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .list-menu--inline {
    display: inline-flex;
    flex-wrap: wrap;
  }

  summary.list-menu__item {
    padding-right: 2.7rem;
  }

  .list-menu__item {
    display: flex;
    align-items: center;
    line-height: calc(1 + 0.3 / var(--font-body-scale));
  }

  .list-menu__item--link {
    text-decoration: none;
    padding-bottom: 1rem;
    padding-top: 1rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
  }

  @media screen and (min-width: 750px) {
    .list-menu__item--link {
      padding-bottom: 0.5rem;
      padding-top: 0.5rem;
    }
  }
</style>

{%- style -%}
  .header {
    padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 3rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 3rem;
  }

  .section-header {
    position: sticky; /* This is for fixing a Safari z-index issue. PR #2147 */
    margin-bottom: {{ section.settings.margin_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-header {
      margin-bottom: {{ section.settings.margin_bottom }}px;
    }
  }

  @media screen and (min-width: 990px) {
    .header {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
  @media screen and (max-width: 767px){
    .header svg{
      color: #000 !important;
    }
    svg.icon.icon-arrow {
    color: #000 !important;
}
  }
{%- endstyle -%}

<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

{%- liquid
  for block in section.blocks
    if block.type == '@app'
      assign has_app_block = true
    endif
  endfor
-%}

<{% if section.settings.sticky_header_type != 'none' %}sticky-header data-sticky-type="{{ section.settings.sticky_header_type }}"{% else %}div{% endif %} class="header-wrapper color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator %} header-wrapper--border-bottom{% endif %}">
  {%- liquid
    assign social_links = false
    assign localization_forms = false

    if settings.social_twitter_link != blank or settings.social_facebook_link != blank or settings.social_pinterest_link != blank or settings.social_instagram_link != blank or settings.social_youtube_link != blank or settings.social_vimeo_link != blank or settings.social_tiktok_link != blank or settings.social_tumblr_link != blank or settings.social_snapchat_link != blank
      assign social_links = true
    endif

    if localization.available_countries.size > 1 and section.settings.enable_country_selector or section.settings.enable_language_selector and localization.available_languages.size > 1
      assign localization_forms = true
    endif
  -%}
  <header class="header header--{{ section.settings.logo_position }} header--mobile-{{ section.settings.mobile_logo_position }} page-width{% if section.settings.menu_type_desktop == 'drawer' %} drawer-menu{% endif %}{% if section.settings.menu != blank %} header--has-menu{% endif %}{% if has_app_block %} header--has-app{% endif %}{% if social_links %} header--has-social{% endif %}{% if shop.customer_accounts_enabled %} header--has-account{% endif %}{% if localization_forms %} header--has-localizations{% endif %}">
    {%- liquid
      if section.settings.menu != blank
        render 'header-drawer'
      endif

      if section.settings.logo_position == 'top-center' or section.settings.menu == blank
        render 'header-search', input_id: 'Search-In-Modal-1'
      endif
    -%}

    {%- if section.settings.logo_position != 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
          <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
            {%- if settings.logo != blank -%}
              <div class="header__heading-logo-wrapper">
                {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
                {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
                {% capture sizes %}(max-width: {{ settings.logo_width | times: 2 }}px) 50vw, {{ settings.logo_width }}px{% endcapture %}
                {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
                {{ settings.logo | image_url: width: 600 | image_tag:
                  class: 'header__heading-logo motion-reduce',
                  widths: widths,
                  height: logo_height,
                  width: settings.logo_width,
                  alt: logo_alt,
                  sizes: sizes,
                  preload: true
                }}
              </div>
            {%- else -%}
              <span class="h2">{{ shop.name }}</span>
            {%- endif -%}
          </a>
              <a aria-label="link" class="site-title" href="/">
				  <span class="logo-title">The Sunnah Store</span>
				 <span class="logo-est">Est : 1438</span>
			</a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}

    {%- liquid
      if section.settings.menu != blank
        if section.settings.menu_type_desktop == 'dropdown'
          render 'header-dropdown-menu'
        elsif section.settings.menu_type_desktop != 'drawer'
          render 'header-mega-menu'
        endif
      endif
    %}

    {%- if section.settings.logo_position == 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
          <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
            {%- if settings.logo != blank -%}
              <div class="header__heading-logo-wrapper">
                {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
                {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
                {% capture sizes %}(min-width: 750px) {{ settings.logo_width }}px, 50vw{% endcapture %}
                {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
                {{ settings.logo | image_url: width: 600 | image_tag:
                  class: 'header__heading-logo',
                  widths: widths,
                  height: logo_height,
                  width: settings.logo_width,
                  alt: logo_alt,
                  sizes: sizes,
                  preload: true
                }}
              </div>
            {%- else -%}
              <span class="h2">{{ shop.name }}</span>
            {%- endif -%}
          </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}

    <div class="header__icons{% if section.settings.enable_country_selector or section.settings.enable_language_selector %} header__icons--localization header-localization{% endif %}">
      <div class="desktop-localization-wrapper">
        {%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
          <localization-form class="small-hide medium-hide" data-prevent-hide>
            {%- form 'localization', id: 'HeaderCountryForm', class: 'localization-form' -%}
              <div>
                <h2 class="visually-hidden" id="HeaderCountryLabel">{{ 'localization.country_label' | t }}</h2>
                {%- render 'country-localization', localPosition: 'HeaderCountry' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {% endif %}

        {%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
          <localization-form class="small-hide medium-hide" data-prevent-hide>
            {%- form 'localization', id: 'HeaderLanguageForm', class: 'localization-form' -%}
              <div>
                <h2 class="visually-hidden" id="HeaderLanguageLabel">{{ 'localization.language_label' | t }}</h2>
                {%- render 'language-localization', localPosition: 'HeaderLanguage' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {%- endif -%}
      </div>

      <!-- Country Dropdown -->
      <div class="country-dropdown" id="country-dropdown">
        <button class="country-dropdown__trigger" id="country-trigger" aria-expanded="false">
        <div class="country-dropdown__flag">
          <img src="{{ section.settings.default_flag | default: 'https://flagcdn.com/w40/bd.png' }}" alt="Country flag" id="selected-flag">
        </div>
        <span class="country-dropdown__code" id="selected-code">{{ section.settings.default_country_code | default: 'BD' }}</span>
        <svg class="country-dropdown__arrow" viewBox="0 0 12 12" fill="none">
          <path d="M2 4l4 4 4-4" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        </button>
        
        <div class="country-dropdown__menu" id="country-menu">
           {% if section.settings.show_us_option %}
          <a href="https://www.thesunnah.store/" class="country-dropdown__option" data-country="BD">
            <div class="country-dropdown__option-flag">
              <img src="https://flagcdn.com/w40/bd.png" alt="BD flag">
            </div>
            <div class="country-dropdown__option-info">
              <span class="country-dropdown__option-name">Bangladesh</span>
              <span class="country-dropdown__option-code">BD</span>
            </div>
          </a>
          {% endif %}

          {% if section.settings.show_uk_option %}
          <a href="https://thesunnahstore.co.uk/" class="country-dropdown__option" data-country="UK">
            <div class="country-dropdown__option-flag">
              <img src="https://flagcdn.com/w40/gb.png" alt="UK flag">
            </div>
            <div class="country-dropdown__option-info">
              <span class="country-dropdown__option-name">United Kingdom</span>
              <span class="country-dropdown__option-code">UK</span>
            </div>
          </a>
          {% endif %}
          
         
          
          
          <!-- Add more countries as needed -->
        </div>
      </div>

      {% render 'header-search', input_id: 'Search-In-Modal' %}

      {%- if shop.customer_accounts_enabled -%}
        <a
          href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}"
          class="header__icon header__icon--account link focus-inset{% if section.settings.menu != blank %} small-hide{% endif %}"
          rel="nofollow"
        >
          {%- if section.settings.enable_customer_avatar -%}
            <account-icon>
              {%- if customer and customer.has_avatar? -%}
                {{ customer | avatar }}
              {%- else -%}
                <span class="svg-wrapper">{{ 'icon-account.svg' | inline_asset_content }}</span>
              {%- endif -%}
            </account-icon>
          {%- else -%}
            <span class="svg-wrapper">{{ 'icon-account.svg' | inline_asset_content }}</span>
          {%- endif -%}
          <span class="visually-hidden">
            {%- liquid
              if customer
                echo 'customer.account_fallback' | t
              else
                echo 'customer.log_in' | t
              endif
            -%}
          </span>
        </a>
      {%- endif -%}

      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
        {%- endcase -%}
      {%- endfor -%}

      <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
          {% if cart == empty %}
            <span class="svg-wrapper">{{'icon-cart-empty.svg' | inline_asset_content }}</span>
          {% else %}
            <span class="svg-wrapper">{{'icon-cart.svg' | inline_asset_content }}</span>
          {% endif %}
        <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
        {%- if cart != empty -%}
          <div class="cart-count-bubble">
            {%- if cart.item_count < 100 -%}
              <span aria-hidden="true">{{ cart.item_count }}</span>
            {%- endif -%}
            <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </div>
        {%- endif -%}
      </a>
    </div>
  </header>
</{% if section.settings.sticky_header_type != 'none' %}sticky-header{% else %}div{% endif %}>

{%- if settings.cart_type == "notification" -%}
  {%- render 'cart-notification', color_scheme: section.settings.color_scheme, desktop_menu_type: section.settings.menu_type_desktop -%}
{%- endif -%}

{% javascript %}
class StickyHeader extends HTMLElement {
  constructor() {
    super();
  }

  connectedCallback() {
    this.header = document.querySelector('.section-header');
    this.headerIsAlwaysSticky = this.getAttribute('data-sticky-type') === 'always' || this.getAttribute('data-sticky-type') === 'reduce-logo-size';
    this.headerBounds = {};

    this.setHeaderHeight();

    window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));

    if (this.headerIsAlwaysSticky) {
      this.header.classList.add('shopify-section-header-sticky');
    };

    this.currentScrollTop = 0;
    this.preventReveal = false;
    this.predictiveSearch = this.querySelector('predictive-search');

    this.onScrollHandler = this.onScroll.bind(this);
    this.hideHeaderOnScrollUp = () => this.preventReveal = true;

    this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
    window.addEventListener('scroll', this.onScrollHandler, false);

    this.createObserver();
  }

  setHeaderHeight() {
    document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
  }

  disconnectedCallback() {
    this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
    window.removeEventListener('scroll', this.onScrollHandler);
  }

  createObserver() {
    let observer = new IntersectionObserver((entries, observer) => {
      this.headerBounds = entries[0].intersectionRect;
      observer.disconnect();
    });

    observer.observe(this.header);
  }

  onScroll() {
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

    if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

    if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
      this.header.classList.add('scrolled-past-header');
      if (this.preventHide) return;
      requestAnimationFrame(this.hide.bind(this));
    } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
      this.header.classList.add('scrolled-past-header');
      if (!this.preventReveal) {
        requestAnimationFrame(this.reveal.bind(this));
      } else {
        window.clearTimeout(this.isScrolling);

        this.isScrolling = setTimeout(() => {
          this.preventReveal = false;
        }, 66);

        requestAnimationFrame(this.hide.bind(this));
      }
    } else if (scrollTop <= this.headerBounds.top) {
      this.header.classList.remove('scrolled-past-header');
      requestAnimationFrame(this.reset.bind(this));
    }

    this.currentScrollTop = scrollTop;
  }

  hide() {
    if (this.headerIsAlwaysSticky) return;
    this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
    this.closeMenuDisclosure();
    this.closeSearchModal();
  }

  reveal() {
    if (this.headerIsAlwaysSticky) return;
    this.header.classList.add('shopify-section-header-sticky', 'animate');
    this.header.classList.remove('shopify-section-header-hidden');
  }

  reset() {
    if (this.headerIsAlwaysSticky) return;
    this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
  }

  closeMenuDisclosure() {
    this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
    this.disclosures.forEach(disclosure => disclosure.close());
  }

  closeSearchModal() {
    this.searchModal = this.searchModal || this.header.querySelector('details-modal');
    this.searchModal.close(false);
  }
}

customElements.define('sticky-header', StickyHeader);

// Country configuration - add/remove countries as needed
const countries = [
  {
    name: 'Bangladesh',
    flag: 'https://flagcdn.com/w40/bd.png',
    url: 'https://www.thesunnah.store/'
  },
  {
    name: 'United Kingdom',
    flag: 'https://flagcdn.com/w40/gb.png',
    url: 'https://thesunnahstore.co.uk/'
  },
  
];

// Country Dropdown Functionality
class CountryDropdown {
  constructor() {
    this.dropdown = document.getElementById('country-dropdown');
    this.trigger = document.getElementById('country-trigger');
    this.menu = document.getElementById('country-menu');
    this.selectedFlag = document.getElementById('selected-flag');
    this.isOpen = false;
    
    if (this.dropdown && this.trigger && this.menu) {
      this.init();
    }
  }

  init() {
    this.populateDropdown();
    this.bindEvents();
    this.loadSavedCountry();
  }

  populateDropdown() {
    if (!this.menu) return;

    this.menu.innerHTML = countries.map(country => `
      <a href="${country.url}" class="country-dropdown__option" data-country="${country.code}">
        <div class="country-dropdown__option-flag">
          <img src="${country.flag}" alt="${country.name} flag">
        </div>
        <div class="country-dropdown__option-info">
          <span class="country-dropdown__option-name">${country.name}</span>
        </div>
      </a>
    `).join('');
  }

  bindEvents() {
    // Toggle dropdown on trigger click
    this.trigger.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      this.toggle();
    });

    // Close dropdown when clicking outside
    document.addEventListener('click', (e) => {
      if (!this.dropdown.contains(e.target)) {
        this.close();
      }
    });

    // Handle country selection - use event delegation since options are dynamically created
    this.menu.addEventListener('click', (e) => {
      const option = e.target.closest('.country-dropdown__option');
      if (option) {
        e.preventDefault();
        const country = option.dataset.country;
        const flag = option.querySelector('img').src;
        const name = option.querySelector('.country-dropdown__option-name').textContent;
        
        this.selectCountry(country, flag, name);
        
        // Navigate to the country store
        window.location.href = option.href;
      }
    });

    // Close on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && this.isOpen) {
        this.close();
      }
    });
  }

  toggle() {
    if (this.isOpen) {
      this.close();
    } else {
      this.open();
    }
  }

  open() {
    this.dropdown.classList.add('active');
    this.trigger.setAttribute('aria-expanded', 'true');
    this.isOpen = true;
  }

  close() {
    this.dropdown.classList.remove('active');
    this.trigger.setAttribute('aria-expanded', 'false');
    this.isOpen = false;
  }

  selectCountry(countryCode, flagSrc, countryName) {
    // Update the trigger display
    if (this.selectedFlag && flagSrc) {
      this.selectedFlag.src = flagSrc;
      this.selectedFlag.alt = `${countryName} flag`;
    }
    
    if (this.selectedCode) {
      this.selectedCode.textContent = countryCode;
    }

    // Save selection to localStorage
    try {
      localStorage.setItem('selected_country', JSON.stringify({
        code: countryCode,
        flag: flagSrc,
        name: countryName
      }));
    } catch (error) {
      console.log('Unable to save country preference');
    }

    // Update active state in menu
    const options = this.menu.querySelectorAll('.country-dropdown__option');
    options.forEach(opt => opt.classList.remove('active'));
    
    const selectedOption = this.menu.querySelector(`[data-country="${countryCode}"]`);
    if (selectedOption) {
      selectedOption.classList.add('active');
    }

    this.close();
  }

  loadSavedCountry() {
    try {
      const saved = localStorage.getItem('selected_country');
      if (saved) {
        const country = JSON.parse(saved);
        // Verify the country still exists in our list
        const countryExists = countries.find(c => c.code === country.code);
        if (countryExists) {
          this.selectCountry(country.code, country.flag, country.name);
        }
      }
    } catch (error) {
      console.log('No saved country preference');
    }
  }
}

// Mega menu hover functionality
document.addEventListener("DOMContentLoaded", function () {
  // Initialize country dropdown
  new CountryDropdown();

  // Handle mega menu hover
  const menuItems = document.querySelectorAll(".mega-menu");
  menuItems.forEach((menu) => {
    menu.addEventListener("mouseenter", function () {
      menu.setAttribute("open", "true");
    });

    menu.addEventListener("mouseleave", function () {
      menu.removeAttribute("open");
    });
  });
});
{% endjavascript %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

  <script>
    document.addEventListener("DOMContentLoaded", function () {
    const menuItems = document.querySelectorAll(".mega-menu");

    menuItems.forEach((menu) => {
        menu.addEventListener("mouseenter", function () {
            menu.setAttribute("open", "true");
        });

        menu.addEventListener("mouseleave", function () {
            menu.removeAttribute("open");
        });
    });
});

  </script>
  
{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "max_blocks": 3,
  "settings": [
    {
      "type": "select",
      "id": "logo_position",
      "options": [
        {
          "value": "top-left",
          "label": "t:sections.header.settings.logo_position.options__2.label"
        },
        {
          "value": "top-center",
          "label": "t:sections.header.settings.logo_position.options__3.label"
        },
        {
          "value": "middle-left",
          "label": "t:sections.header.settings.logo_position.options__1.label"
        },
        {
          "value": "middle-center",
          "label": "t:sections.header.settings.logo_position.options__4.label"
        }
      ],
      "default": "middle-left",
      "label": "t:sections.header.settings.logo_position.label",
      "info": "t:sections.header.settings.logo_help.content"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "select",
      "id": "menu_type_desktop",
      "options": [
        {
          "value": "dropdown",
          "label": "t:sections.header.settings.menu_type_desktop.options__1.label"
        },
        {
          "value": "mega",
          "label": "t:sections.header.settings.menu_type_desktop.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.header.settings.menu_type_desktop.options__3.label"
        }
      ],
      "default": "dropdown",
      "label": "t:sections.header.settings.menu_type_desktop.label",
      "info": "t:sections.header.settings.menu_type_desktop.info"
    },
    {
      "type": "select",
      "id": "sticky_header_type",
      "options": [
        {
          "value": "none",
          "label": "t:sections.header.settings.sticky_header_type.options__1.label"
        },
        {
          "value": "on-scroll-up",
          "label": "t:sections.header.settings.sticky_header_type.options__2.label"
        },
        {
          "value": "always",
          "label": "t:sections.header.settings.sticky_header_type.options__3.label"
        },
        {
          "value": "reduce-logo-size",
          "label": "t:sections.header.settings.sticky_header_type.options__4.label"
        }
      ],
      "default": "on-scroll-up",
      "label": "t:sections.header.settings.sticky_header_type.label"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__1.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "color_scheme",
      "id": "menu_color_scheme",
      "label": "t:sections.header.settings.menu_color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__3.content",
      "info": "t:sections.header.settings.header__4.info"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": false,
      "label": "t:sections.header.settings.enable_country_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__5.content",
      "info": "t:sections.header.settings.header__6.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": false,
      "label": "t:sections.header.settings.enable_language_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__7.content",
      "info": "t:sections.header.settings.header__7.info"
    },
    {
      "type": "checkbox",
      "id": "enable_customer_avatar",
      "default": true,
      "label": "t:sections.header.settings.enable_customer_avatar.label",
      "info": "t:sections.header.settings.enable_customer_avatar.info"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.mobile_layout.content"
    },
    {
      "type": "select",
      "id": "mobile_logo_position",
      "options": [
        {
          "value": "center",
          "label": "t:sections.header.settings.mobile_logo_position.options__1.label"
        },
        {
          "value": "left",
          "label": "t:sections.header.settings.mobile_logo_position.options__2.label"
        }
      ],
      "default": "center",
      "label": "t:sections.header.settings.mobile_logo_position.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing"
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.header.settings.margin_bottom.label",
      "default": 0
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 20
    }
  ],
  "blocks": [
    {
      "type": "@app"
    }
  ]
}
{% endschema %}
