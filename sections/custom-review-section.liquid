{% schema %}
{
  "name": "custom-sunnah-reviews",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Our supporters who love to live fresh everyday:"
    },
    {
      "type": "text",
      "id": "cta_text",
      "label": "CTA Button Text",
      "default": "View All"
    },
    {
      "type": "url",
      "id": "cta_link",
      "label": "CTA Button Link"
    }
  ],
  "blocks": [
    {
      "type": "testimonial",
      "name": "Testimonial",
      "settings": [
        {
          "type": "text",
          "id": "name",
          "label": "Customer Name",
          "default": "Customer Name"
        },
        {
          "type": "image_picker",
          "id": "avatar",
          "label": "Customer Avatar"
        },
        {
          "type": "range",
          "id": "rating",
          "min": 1,
          "max": 5,
          "step": 1,
          "default": 5,
          "label": "Rating (1-5)"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Testimonial Title",
          "default": "Great product!"
        },
        {
          "type": "textarea",
          "id": "testimonial",
          "label": "Testimonial Text",
          "default": "This product is amazing!"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "custom-sunnah-reviews",
      "blocks": [
        {
          "type": "testimonial"
        },
        {
          "type": "testimonial"
        },
        {
          "type": "testimonial"
        }
      ]
    }
  ]
}
{% endschema %}

<style>
  .custom-sunnah-review-testimonials {
    padding: 20px 0 0 0;
    background-color: #fafafa;
    margin: 0 auto;
  }
  
  .custom-sunnah-review-heading {
    text-align: center;
    font-size: 36px;
    font-weight: 600;
    margin-bottom: 40px;
    line-height: 1.2;
  }
  
  .custom-sunnah-review-heading .highlight {
    color: #87C643;
  }
  
  .testimonial-slider {
    position: relative;
    margin-bottom: 40px;
    overflow: hidden; /* Hide overflowing cards */
  }
  
  .testimonial-slides {
    display: flex;
    gap: 15px;
    transition: transform 0.5s ease; /* Smooth transition */
    padding: 10px 0;
    padding-bottom: 4rem; /* Space for staggered cards */
  }
  
  /* .testimonial-card:nth-child(2n) {
    transform: translateY(4rem);
  } */
  
  .testimonial-card {
    flex: 0 0 calc(20% - 15px); /* One card at a time */
    min-width: 280px;
    background-color: #dcdcdc47;
    padding: 20px;
    display: flex;
    flex-direction: column;
    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.2);
  }
  
  .rating {
    color:#fbbc00;
    font-size: 28px;
    margin-bottom: 10px;
    text-align: center;
    font-weight: bold;
  }
  
  .empty-star {
    color: #E0E0E0;
  }
  
  .testimonial-title {
    font-size: 22px;
    font-weight: 700;
    margin-bottom: 15px;
    text-align: center;
  }
  
  .testimonial-text {
    flex-grow: 1;
    margin-bottom: 20px;
    font-size: 16px;
    line-height: 1.5;
    text-align: center;
    color: #000;
  }
  .author-name {
    color: #000;
}
  
  .testimonial-author {
    display: flex;
    align-items: center;
    gap: 10px;
    flex-direction: column;
  }
  
  .author-avatar {
    width: 100px;
    height: 100px;
    overflow: hidden;
  }
  
  .author-avatar img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .slider-controls {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    margin-top: 30px;
  }
  
  .slider-nav-btn {
    background-color:#000;
    color: white;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    border: none;
  }
  button.slider-nav-btn.prev-btn,  button.slider-nav-btn.next-btn {
    font-size: 30px;
    padding-bottom: 7px;
}
  
  .slider-dots {
    display: flex;
    gap: 5px;
    flex-wrap: wrap; 
    justify-content: center;
    max-width: 80%; 
  }
  
  .slider-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: #abbcaf;
    cursor: pointer;
  }
  
  .slider-dot.active {
    background-color:#000;
  }
  
  .cta-container {
    text-align: center;
    margin-top: 30px;
  }
  
 .cta-button {
  background: linear-gradient(45deg, #000, #7d7777d6); /* same gradient as cus-button */
  color: white;
  font-weight: bold;
  padding: 15px 25px;
  border-radius: 30px; /* matches the round shape of cus-button */
  text-transform: uppercase;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
  border: none;
  cursor: pointer;
  font-size: 16px;
  letter-spacing: 2px;
  position: relative;
  overflow: hidden;
  z-index: 0;
  transition: all 0.6s ease-out;
  margin-top: 10px;
}

/* Shine effect */
.cta-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 150%;
  height: 100%;
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0) 50%,
    rgba(255, 255, 255, 0.4) 70%,
    rgba(255, 255, 255, 0) 80%
  );
  transform: translateX(-100%);
  z-index: 1;
  pointer-events: none;
}

/* Animate shine on hover */
.cta-button:hover::before {
  animation: smooth-shine 2s ease-in-out infinite;
}

/* Optional hover lift */
.cta-button:hover {
  transform: translateY(-2px);
}

/* Ensure button content is above shine */
.cta-button > * {
  position: relative;
  z-index: 2;
}

/* Shine animation keyframes */
@keyframes smooth-shine {
  0% {
    transform: translateX(-100%);
  }
  50% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(100%);
  }
}

  @media screen and (max-width: 768px) {
    .testimonial-card:nth-child(2n) {
      transform: none; 
    }
    .custom-sunnah-review-testimonials {
    padding: 0 20px;
    }
    .custom-sunnah-review-heading {
      font-size: 36px;
    }
    .rating {
    color:#87C643;
    font-size: 24px;
    margin-bottom: 10px;
    text-align: center;
    font-weight: bold;
}
  }
</style>

<div class="custom-sunnah-review-testimonials">
  <h2 class="custom-sunnah-review-heading">
    {{ section.settings.heading }} <span class="highlight"></span>
  </h2>
  
  <div class="testimonial-slider">
    <div class="testimonial-slides" id="testimonialSlides">
      {% for block in section.blocks %}
        <div class="testimonial-card" {{ block.shopify_attributes }}>
          <div class="rating">
            {% for i in (1..5) %}
              {% if i <= block.settings.rating %}
                <span class="star">⭐️</span>
              {% else %}
                <span class="star empty-star">⭐️</span>
              {% endif %}
            {% endfor %}
          </div>
          
          <!-- <h3 class="testimonial-title">{{ block.settings.title }}</h3> -->
          <p class="testimonial-text">{{ block.settings.testimonial }}</p>
          
          <div class="testimonial-author">
            <div class="author-avatar">
              {% if block.settings.avatar %}
                {{ block.settings.avatar | image_url: width: 100 | image_tag }}
              {% else %}
                <svg viewBox="0 0 24 24" fill="#ccc">
                  <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                </svg>
              {% endif %}
            </div>
            <div class="author-name">{{ block.settings.name }}</div>
          </div>
        </div>
      {% endfor %}
    </div>
    
    <!-- <div class="slider-controls">
      <button class="slider-nav-btn prev-btn" aria-label="Previous" onclick="moveSlider(-1)">
        ‹
      </button>
      
      <div class="slider-dots">
  {% for block in section.blocks %}
    <span class="slider-dot {% if forloop.first %}active{% endif %}" data-index="{{ forloop.index0 }}" onclick="goToSlide({{ forloop.index0 }})"></span>
  {% endfor %}
  </div>
      
      <button class="slider-nav-btn next-btn" aria-label="Next" onclick="moveSlider(1)">
        ›
      </button>
    </div> -->
  </div>
  
  <!-- <div class="cta-container">
    <a href="{{ section.settings.cta_link }}" class="cta-button">
      {{ section.settings.cta_text }}
    </a>
  </div> -->
</div>

<script>
  let currentSlide = 0;
  const slides = document.getElementById('testimonialSlides');
  const dots = document.querySelectorAll('.slider-dot');
  const slideCount = {{ section.blocks.size }};
  
  function updateSlider() {
    if (!slides) return;
    
    const slideWidth = slides.querySelector('.testimonial-card').offsetWidth;
    const gap = 15;
    
    // Clone slides for infinite loop if not already done
    if (!window.slidesCloned) {
      // Clone items at the beginning and end to create the illusion of an infinite loop
      const testimonials = slides.querySelectorAll('.testimonial-card');
      
      // Clone first slides and append to the end
      for (let i = 0; i < Math.min(slideCount, 3); i++) {
        const clone = testimonials[i].cloneNode(true);
        clone.setAttribute('aria-hidden', 'true');
        clone.classList.add('cloned-slide');
        slides.appendChild(clone);
      }
      
      // Clone last slides and prepend to the beginning
      for (let i = Math.max(0, slideCount - 3); i < slideCount; i++) {
        const clone = testimonials[i].cloneNode(true);
        clone.setAttribute('aria-hidden', 'true');
        clone.classList.add('cloned-slide');
        slides.prepend(clone);
      }
      
      window.slidesCloned = true;
      
      // Adjust initial position to show the first real slide (skip the prepended clones)
      currentSlide = Math.min(3, slideCount);
    }
    
    // Calculate the offset
    const offset = (currentSlide - Math.min(3, slideCount)) * (slideWidth + gap);
    
    // Use transform for smoother animation
    slides.style.transition = 'transform 0.5s ease';
    slides.style.transform = `translateX(-${offset}px)`;
    
    // Update active dot - need to determine which actual slide is showing
    const actualSlideIndex = (currentSlide - Math.min(3, slideCount)) % slideCount;
    const normalizedIndex = actualSlideIndex < 0 ? actualSlideIndex + slideCount : actualSlideIndex;
    
    dots.forEach((dot, index) => {
      dot.classList.toggle('active', index === normalizedIndex);
    });
  }
  
  function moveSlider(direction) {
    currentSlide += direction;
    updateSlider();
    
    // Check if we need to snap back to create the infinite effect
    if (direction > 0 && currentSlide >= slideCount + Math.min(3, slideCount)) {
      // We've gone past the end, snap back to the beginning (plus clones)
      setTimeout(() => {
        slides.style.transition = 'none';
        currentSlide = Math.min(3, slideCount);
        slides.style.transform = `translateX(-${(currentSlide - Math.min(3, slideCount)) * (slides.querySelector('.testimonial-card').offsetWidth + 15)}px)`;
      }, 500); // Wait for transition to complete
    } else if (direction < 0 && currentSlide < Math.min(3, slideCount)) {
      // We've gone past the beginning, snap to the end (minus clones)
      setTimeout(() => {
        slides.style.transition = 'none';
        currentSlide = slideCount + Math.min(3, slideCount) - 1;
        slides.style.transform = `translateX(-${(currentSlide - Math.min(3, slideCount)) * (slides.querySelector('.testimonial-card').offsetWidth + 15)}px)`;
      }, 500); // Wait for transition to complete
    }
    
    // Re-enable transitions after the snap
    setTimeout(() => {
      slides.style.transition = 'transform 0.5s ease';
    }, 510);
  }
  
  function goToSlide(index) {
    // Adjust for cloned slides at beginning
    currentSlide = index + Math.min(3, slideCount);
    updateSlider();
  }
  
  // Initialize responsive behavior
  window.addEventListener('resize', () => {
    // Reset position to first real slide
    currentSlide = Math.min(3, slideCount);
    updateSlider();
  });
  
  // Initialize slider
  document.addEventListener('DOMContentLoaded', () => {
    window.slidesCloned = false; // Initialize cloning flag
    updateSlider();
    
    // Enable auto-advancing for circular effect
    setInterval(() => moveSlider(1), 5000);
  });
</script>